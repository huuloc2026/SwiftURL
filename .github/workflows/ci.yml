name: SwiftURL CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: 📦 Install dependencies
        run: go mod download

      - name: Build application
        run: go build -o myapp ./cmd/server/main.go

      # - name: 🧪 Run unit tests
      #   env:
      #     DB_HOST: localhost
      #     DB_PORT: 5432
      #     DB_USER: myuser
      #     DB_PASS: mypassword
      #     DB_NAME: mydatabase
      #   run: |
      #     go test ./...

  # docker-deploy:
  #   needs: build-test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: 🔄 Checkout code
  #       uses: actions/checkout@v3

  #     - name: 🐳 Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: 🔐 Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: 📦 Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/swifturl:latest
